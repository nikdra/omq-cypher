match (zp)-[:NEXT]->(zp)
match (xp:adult)
match (zp:sample)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp:stroller)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp:construction_worker)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:police_officer)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:wheelchair)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (xp:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:personal_mobility)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:stroller)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (xp:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:adult)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:pedestrian)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:adult)
match (z:sample)
return distinct x as x, x as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp:adult)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (xp:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp:stroller)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:pedestrian)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (zp:sample)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:adult)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:adult)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:personal_mobility)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (xp:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:police_officer)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, x as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (xp:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:police_officer)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:pedestrian)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp:adult)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (zp:sample)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:construction_worker)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (x:wheelchair)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (xp:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:pedestrian)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:pedestrian)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:police_officer)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:adult)
match (z:sample)
return distinct x as x, x as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (x)-[:FIRST_ANNOTATION]->(y)
match (v1:sample)
return distinct x as x, x as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:police_officer)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:pedestrian)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp:construction_worker)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:police_officer)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:adult)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (xp:personal_mobility)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (zp:sample)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (x:construction_worker)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:personal_mobility)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:pedestrian)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:police_officer)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:construction_worker)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (xp:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (xp:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (xp:child)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:personal_mobility)
match (v1:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:adult)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (zp:sample)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:construction_worker)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (zp:sample)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:wheelchair)
match (v1:sample)
return distinct x as x, x as xp
union
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (x:pedestrian)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:police_officer)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (xp:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (xp:adult)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (zp:sample)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:stroller)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:adult)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:adult)
match (zp:sample)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:police_officer)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:pedestrian)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:adult)
match (zp:sample)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (xp:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:adult)
match (zp:sample)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:wheelchair)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (xp:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:personal_mobility)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:pedestrian)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp:adult)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:adult)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (xp:child)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:personal_mobility)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (x:construction_worker)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (xp:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (xp:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (xp:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (x:wheelchair)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (x)-[:FIRST_ANNOTATION]->(y)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (xp:child)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (zp:sample)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:pedestrian)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (v1:sample)
return distinct x as x, xp as xp
union
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:adult)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:adult)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (zp:sample)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:personal_mobility)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (zp:sample)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:adult)
match (zp:sample)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:wheelchair)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp:construction_worker)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (xp:personal_mobility)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (x:child)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (x:child)
match (v1:sample)
return distinct x as x, xp as xp
union
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
match (xp:wheelchair)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:child)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(v1)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x)-[:FIRST_ANNOTATION]->(y)
match (x:adult)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:wheelchair)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:adult)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (xp:wheelchair)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (xp:personal_mobility)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (xp:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:personal_mobility)
match (zp:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:personal_mobility)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (zp:sample)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (y)-[:OF]->(v1)
match (xp:police_officer)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (zp:sample)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:police_officer)
match (xp:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:adult)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:stroller)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:adult)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:stroller)
match (zp:sample)
match (xp:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (x:child)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:construction_worker)
match (y)-[:OF]->(z)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (xp:stroller)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:child)
match (v1:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:personal_mobility)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:stroller)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (zp:sample)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:adult)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (zp:sample)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:child)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (x:adult)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:pedestrian)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:wheelchair)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (x:pedestrian)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:stroller)
match (zp:sample)
match (x:child)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (x:police_officer)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:personal_mobility)
match (x:construction_worker)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (xp:child)
match (v1)-[:NEXT]->(v1)
match (x:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:pedestrian)
match (xp:police_officer)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:stroller)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (x:stroller)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (xp:pedestrian)
match (xp)-[:LAST_ANNOTATION]->(y)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (zp:sample)
match (x:construction_worker)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (zp:sample)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct xp as x, xp as xp
union
match (zp)-[:NEXT]->(zp)
match (xp)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (yp)-[:OF]->(zp)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (xp:pedestrian)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (xp:construction_worker)
match (zp:sample)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:pedestrian)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:adult)
match (xp:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:pedestrian)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (v1:sample)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:adult)
match (xp:police_officer)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:stroller)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (y)-[:OF]->(z)
match (x:pedestrian)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (xp:police_officer)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:police_officer)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (z)-[:NEXT]->(z)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (x:child)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:police_officer)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (z)-[:NEXT]->(z)
match (x:wheelchair)
match (y)-[:OF]->(z)
match (yp)-[:OF]->(z)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (yp)-[:OF]->(v1)
match (v1)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:construction_worker)
match (x:pedestrian)
match (v1:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:wheelchair)
match (zp:sample)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:police_officer)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:pedestrian)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (x:construction_worker)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (x:construction_worker)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x)-[:FIRST_ANNOTATION]->(y)
match (zp:sample)
match (x:adult)
match (y)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:pedestrian)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (zp)-[:NEXT]->(zp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (xp:adult)
match (zp:sample)
match (yp)-[:OF]->(zp)
match (y)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (xp:adult)
match (y)-[:OF]->(z)
match (xp)-[:LAST_ANNOTATION]->(y)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct xp as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(z)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp:child)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:adult)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (v1)-[:NEXT]->(v1)
match (y)-[:OF]->(v1)
match (x:child)
match (v1:sample)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (xp:wheelchair)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (z)-[:NEXT]->(z)
match (xp:personal_mobility)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (xp)-[:FIRST_ANNOTATION]->(y)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x:personal_mobility)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (x)-[:FIRST_ANNOTATION]->(yp)
match (zp)-[:NEXT]->(zp)
match (zp:sample)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, x as xp
union
match (x)-[:LAST_ANNOTATION]->(y)
match (xp:child)
match (z)-[:NEXT]->(v1)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (x:construction_worker)
match (y)-[:OF]->(z)
match (v1)-[:NEXT*0..]->(zp)
match (yp)-[:OF]->(zp)
match (z:sample)
return distinct x as x, xp as xp
union
match (x)-[:LAST_ANNOTATION]->(yp)
match (xp)-[:FIRST_ANNOTATION]->(yp)
match (zp:sample)
match (xp:personal_mobility)
match (zp)-[:NEXT]->(v1)
match (v1)-[:NEXT*0..]->(zp)
match (x:child)
match (yp)-[:OF]->(zp)
return distinct x as x, xp as xp